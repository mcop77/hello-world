The Big-O notation of the clear fucntion in the stack implemenation is O(n). The fucntion is O(n) because it only loops through the stack stack.size() amount of times, which we can represent as n times. Inside the loop, no other loops are initiated or called, the only thing that happens is the last element in the stack gets popped back. This decreases the size until there are no elements left in the stack, effectively clearing the stack in O(n) time. In my postfix evaluation, the time complexity is also O(n) because the program is only looping through the stack stack.size() amount of times. In the loop, the only things that are happening are the elements in the vector are being converted to integers or floats, and then combined together using the appropriate operator. After that, the result is pushed back into the stack and the process repeats itself until the for loop ends, which again only loops size() amount of times. This shows that the time complexity is O(n), and even if the there is a constant in front of the n, it can still be represented as O(n).
